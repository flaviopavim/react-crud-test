[{"D:\\Work\\react-crud-test\\frontend\\src\\index.js":"1","D:\\Work\\react-crud-test\\frontend\\src\\App.js":"2","D:\\Work\\react-crud-test\\frontend\\src\\includes\\Top.js":"3","D:\\Work\\react-crud-test\\frontend\\src\\pages\\EditLevel.js":"4","D:\\Work\\react-crud-test\\frontend\\src\\pages\\ListDev.js":"5","D:\\Work\\react-crud-test\\frontend\\src\\pages\\ListLevel.js":"6","D:\\Work\\react-crud-test\\frontend\\src\\pages\\CreateLevel.js":"7","D:\\Work\\react-crud-test\\frontend\\src\\pages\\EditDev.js":"8","D:\\Work\\react-crud-test\\frontend\\src\\pages\\CreateDev.js":"9"},{"size":205,"mtime":1644797793834,"results":"10","hashOfConfig":"11"},{"size":1252,"mtime":1644854869227,"results":"12","hashOfConfig":"11"},{"size":1123,"mtime":1644854390849,"results":"13","hashOfConfig":"11"},{"size":1809,"mtime":1644812535773,"results":"14","hashOfConfig":"11"},{"size":3758,"mtime":1644856171669,"results":"15","hashOfConfig":"11"},{"size":1930,"mtime":1644806138891,"results":"16","hashOfConfig":"11"},{"size":1512,"mtime":1644812645947,"results":"17","hashOfConfig":"11"},{"size":2904,"mtime":1644854732909,"results":"18","hashOfConfig":"11"},{"size":2431,"mtime":1644812565789,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aqt4ux",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Work\\react-crud-test\\frontend\\src\\index.js",[],[],"D:\\Work\\react-crud-test\\frontend\\src\\App.js",[],[],"D:\\Work\\react-crud-test\\frontend\\src\\includes\\Top.js",[],[],"D:\\Work\\react-crud-test\\frontend\\src\\pages\\EditLevel.js",[],[],"D:\\Work\\react-crud-test\\frontend\\src\\pages\\ListDev.js",["49","50"],[],"D:\\Work\\react-crud-test\\frontend\\src\\pages\\ListLevel.js",[],[],"D:\\Work\\react-crud-test\\frontend\\src\\pages\\CreateLevel.js",[],[],"D:\\Work\\react-crud-test\\frontend\\src\\pages\\EditDev.js",["51","52"],[],"import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios'\r\nimport '../App.css'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction EditDev() {\r\n     \r\n    let history = useHistory();\r\n\r\n    const [dev, setDev] = useState({\r\n        id: '',\r\n        name: '',\r\n        level: '',\r\n        description: ''\r\n    })\r\n\r\n    const [levels, setLevels] = useState([])\r\n\r\n    useEffect(() => {\r\n        const id = window.location.href.split('/')[5]\r\n        Axios.get('http://localhost:3002/api/dev/' + id)\r\n            .then(response => {\r\n                setDev(response.data[0])\r\n                Axios.get('http://localhost:3002/api/list/level').then(response => {\r\n                    setLevels([]);\r\n                    response.data.forEach(level => {\r\n                        console.log(level)\r\n                        setLevels(levels => [...levels, { value: level.id, label: level.name }])\r\n                        if (level.name == dev.level) {\r\n                            setDev({ ...dev, level: level.id })\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n\r\n    }, [])\r\n    \r\n    function handleChange(event) {\r\n        setDev({\r\n            ...dev,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        console.log(dev)\r\n        const id = window.location.href.split('/')[5]\r\n        Axios.post('http://localhost:3002/api/edit/dev/'+id, \r\n            { name: dev.name, level: dev.level, description: dev.description }\r\n        )\r\n        history.push(\"/\")\r\n    } \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Nome do desenvolvedor:</label>\r\n                    <input className=\"form-control\" type=\"text\" name=\"name\" value={dev.name} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Nível:</label>\r\n                    <select className=\"form-control\" name=\"level\" value={dev.level} onChange={handleChange}>\r\n                        {\r\n                            levels.map(level => {\r\n                                return <option key={level.value} value={level.value}>{level.label}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Descrição:</label>\r\n                    <textarea className=\"form-control\" name=\"description\" value={dev.description} onChange={handleChange} />\r\n                </div>\r\n                <input className=\"btn btn-success right\" type=\"submit\" value=\"Editar desenvolvedor\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditDev",["53","54"],"D:\\Work\\react-crud-test\\frontend\\src\\pages\\CreateDev.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":17,"column":19,"nodeType":"57","messageId":"58","endLine":17,"endColumn":21},{"ruleId":"55","severity":1,"message":"56","line":17,"column":38,"nodeType":"57","messageId":"58","endLine":17,"endColumn":40},{"ruleId":"55","severity":1,"message":"56","line":29,"column":40,"nodeType":"57","messageId":"58","endLine":29,"endColumn":42},{"ruleId":"59","severity":1,"message":"60","line":36,"column":8,"nodeType":"61","endLine":36,"endColumn":10,"suggestions":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dev'. Either include it or remove the dependency array. You can also do a functional update 'setDev(d => ...)' if you only need 'dev' in the 'setDev' call.","ArrayExpression",["67"],"no-native-reassign",["68"],"no-negated-in-lhs",["69"],{"desc":"70","fix":"71"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dev]",{"range":"72","text":"73"},[1138,1140],"[dev]"]